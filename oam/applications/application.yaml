apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: user-service
  namespace: user-service
spec:
  components:
  - name: user-service
    type: webservice
    properties:
      name: user-service
      image: user-service:latest
      language: python
      framework: fastapi
      port: 8080
      healthPath: /health
      database: postgres
      cache: redis
  # Add your components here using the following types:
  # - microservice-with-db: Full-featured microservice with database and cache
  # - react-frontend: React TypeScript frontend with Material-UI
  # - static-site: Static website hosting
  # - kafka-service: Event streaming service
  # - data-pipeline: ETL and data processing workflows
  # 
  # Example:
  # components:
  # - name: api-backend
  #   type: microservice-with-db
  #   properties:
  #     language: python
  #     framework: fastapi
  #     database: postgres
  #     cache: redis
  #     exposeApi: true
  # - name: web-frontend
  #   type: react-frontend
  #   properties:
  #     framework: react
  #     styling: material-ui
  #     apiEndpoint: /api
  
  # Note: Workflow orchestration is handled by KubeVela WorkflowStepDefinitions
  # installed in the cluster, not embedded in the application spec.
  # See /crossplane/oam/workflow-step-definitions.yaml for orchestration logic.
